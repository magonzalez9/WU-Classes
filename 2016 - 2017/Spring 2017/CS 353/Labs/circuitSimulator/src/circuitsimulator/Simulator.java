/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package circuitsimulator;

import java.util.ArrayList;
import java.util.Hashtable;

/**
 *
 * @author Marco
 */
public class Simulator extends javax.swing.JFrame {
    

 Hashtable ht = new Hashtable();
 
 AND and = new AND();
 NAND nand = new NAND();
 OR or = new OR();
 NOR nor = new NOR();
 XOR xor = new XOR();
 XNOR xnor = new XNOR();
 NOT not = new NOT();
 Light light = new Light();
 
 
 Switch swtch = new Switch();

    /**
     * Creates new form Simulator
     */
    public Simulator() {
        ht.put("S1",swtch.s1(false));
        ht.put("S2",swtch.s2(false));
        ht.put("S3",swtch.s3(false));
        ht.put("S4",swtch.s4(false));
        
        ht.put("L1",light.LIGHT(false));
        ht.put("L2",light.LIGHT(false));
        ht.put("L3",light.LIGHT(false));
        ht.put("L4",light.LIGHT(false));
        
       
        initComponents();
    }

    /**s
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        testField = new javax.swing.JPanel();
        textArea = new javax.swing.JScrollPane();
        cInput = new javax.swing.JTextArea();
        buildButton = new javax.swing.JButton();
        test = new javax.swing.JButton();
        switch1 = new javax.swing.JCheckBox();
        switch2 = new javax.swing.JCheckBox();
        switch3 = new javax.swing.JCheckBox();
        switch4 = new javax.swing.JCheckBox();
        offLight1 = new javax.swing.JLabel();
        offLight3 = new javax.swing.JLabel();
        onLight1 = new javax.swing.JLabel();
        offLight2 = new javax.swing.JLabel();
        onLight2 = new javax.swing.JLabel();
        onLight3 = new javax.swing.JLabel();
        offLight4 = new javax.swing.JLabel();
        offButton1 = new javax.swing.JLabel();
        onLight4 = new javax.swing.JLabel();
        onButton1 = new javax.swing.JLabel();
        offButton2 = new javax.swing.JLabel();
        onButton2 = new javax.swing.JLabel();
        offButton3 = new javax.swing.JLabel();
        onButton3 = new javax.swing.JLabel();
        offButton4 = new javax.swing.JLabel();
        onButton4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        resetButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        testField.setBackground(new java.awt.Color(0, 0, 0));
        testField.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cInput.setColumns(20);
        cInput.setRows(5);
        textArea.setViewportView(cInput);

        testField.add(textArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 260, 337, 161));

        buildButton.setText("Build Circuit");
        buildButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildButtonActionPerformed(evt);
            }
        });
        testField.add(buildButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 280, 90, 90));

        test.setBackground(new java.awt.Color(0, 204, 0));
        test.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        test.setForeground(new java.awt.Color(0, 153, 51));
        test.setText("GO!");
        test.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testActionPerformed(evt);
            }
        });
        testField.add(test, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, 90, 80));

        switch1.setMinimumSize(new java.awt.Dimension(200, 60));
        switch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                switch1ActionPerformed(evt);
            }
        });
        testField.add(switch1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-60, 160, 210, 80));

        switch2.setBackground(new java.awt.Color(204, 204, 204));
        switch2.setForeground(new java.awt.Color(255, 255, 255));
        switch2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        switch2.setBorderPaintedFlat(true);
        switch2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                switch2ActionPerformed(evt);
            }
        });
        testField.add(switch2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, -320, 90, 550));

        switch3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                switch3ActionPerformed(evt);
            }
        });
        testField.add(switch3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, -270, 80, 500));

        switch4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                switch4ActionPerformed(evt);
            }
        });
        testField.add(switch4, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, -340, 90, 570));

        offLight1.setIcon(new javax.swing.ImageIcon("/Users/Marco/Classes/2016 - 2017/Spring 2017/CS 353/Labs/circuitSimulator/redLight.png")); // NOI18N
        offLight1.setMaximumSize(new java.awt.Dimension(9, 100));
        offLight1.setMinimumSize(new java.awt.Dimension(200, 100));
        testField.add(offLight1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 440, 107, -1));

        offLight3.setIcon(new javax.swing.ImageIcon("/Users/Marco/Classes/2016 - 2017/Spring 2017/CS 353/Labs/circuitSimulator/redLight.png")); // NOI18N
        testField.add(offLight3, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 440, 100, 100));

        onLight1.setIcon(new javax.swing.ImageIcon("/Users/Marco/Classes/2016 - 2017/Spring 2017/CS 353/Labs/circuitSimulator/greenLight.png")); // NOI18N
        testField.add(onLight1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 440, -1, -1));

        offLight2.setIcon(new javax.swing.ImageIcon("/Users/Marco/Classes/2016 - 2017/Spring 2017/CS 353/Labs/circuitSimulator/redLight.png")); // NOI18N
        testField.add(offLight2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 430, -1, 120));

        onLight2.setIcon(new javax.swing.ImageIcon("/Users/Marco/Classes/2016 - 2017/Spring 2017/CS 353/Labs/circuitSimulator/greenLight.png")); // NOI18N
        testField.add(onLight2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 440, -1, -1));

        onLight3.setIcon(new javax.swing.ImageIcon("/Users/Marco/Classes/2016 - 2017/Spring 2017/CS 353/Labs/circuitSimulator/greenLight.png")); // NOI18N
        testField.add(onLight3, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 440, -1, -1));

        offLight4.setIcon(new javax.swing.ImageIcon("/Users/Marco/Classes/2016 - 2017/Spring 2017/CS 353/Labs/circuitSimulator/redLight.png")); // NOI18N
        testField.add(offLight4, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 440, 110, -1));

        offButton1.setIcon(new javax.swing.ImageIcon("/Users/Marco/Classes/2016 - 2017/Spring 2017/CS 353/Labs/circuitSimulator/offButton.png")); // NOI18N
        testField.add(offButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        onLight4.setIcon(new javax.swing.ImageIcon("/Users/Marco/Classes/2016 - 2017/Spring 2017/CS 353/Labs/circuitSimulator/greenLight.png")); // NOI18N
        testField.add(onLight4, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 440, -1, -1));

        onButton1.setIcon(new javax.swing.ImageIcon("/Users/Marco/Classes/2016 - 2017/Spring 2017/CS 353/Labs/circuitSimulator/onButton.png")); // NOI18N
        testField.add(onButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        offButton2.setIcon(new javax.swing.ImageIcon("/Users/Marco/Classes/2016 - 2017/Spring 2017/CS 353/Labs/circuitSimulator/offButton.png")); // NOI18N
        testField.add(offButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, -1, -1));

        onButton2.setIcon(new javax.swing.ImageIcon("/Users/Marco/Classes/2016 - 2017/Spring 2017/CS 353/Labs/circuitSimulator/onButton.png")); // NOI18N
        testField.add(onButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, -1, -1));

        offButton3.setIcon(new javax.swing.ImageIcon("/Users/Marco/Classes/2016 - 2017/Spring 2017/CS 353/Labs/circuitSimulator/offButton.png")); // NOI18N
        testField.add(offButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 150, -1, -1));

        onButton3.setIcon(new javax.swing.ImageIcon("/Users/Marco/Classes/2016 - 2017/Spring 2017/CS 353/Labs/circuitSimulator/onButton.png")); // NOI18N
        testField.add(onButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 150, -1, -1));

        offButton4.setIcon(new javax.swing.ImageIcon("/Users/Marco/Classes/2016 - 2017/Spring 2017/CS 353/Labs/circuitSimulator/offButton.png")); // NOI18N
        testField.add(offButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 150, -1, -1));

        onButton4.setIcon(new javax.swing.ImageIcon("/Users/Marco/Classes/2016 - 2017/Spring 2017/CS 353/Labs/circuitSimulator/onButton.png")); // NOI18N
        testField.add(onButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 150, -1, -1));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Circuit Simulator 2000");
        testField.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, -1, -1));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Directions: Input the circuit blueprints then select \"Build Circuit\"");
        testField.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, -1, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("select the desired switches you wish to turn on and click \"GO!\"");
        testField.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, -1, -1));

        resetButton.setText("RESET");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        testField.add(resetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 380, -1, -1));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Circuit Blueprint Input:");
        testField.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 240, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(testField, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(testField, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buildButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildButtonActionPerformed
        
        String[] lines = cInput.getText().split("\\r?\\n");

        for (String line : lines){
           
            String[] word = line.split(" ");
          
            switch (word[0]) {
                
                case "AND": ht.put(word[1], and.ANDgate((boolean) ht.get(word[2]), (boolean) ht.get(word[3])));;
                   break;
                case "OR":  ht.put(word[1], or.ORgate((boolean) ht.get(word[2]), (boolean) ht.get(word[3]))); 
                   break;
                case "NAND": ht.put(word[1], nand.NANDgate((boolean) ht.get(word[2]), (boolean) ht.get(word[3])));
                    break;
                case "XOR": ht.put(word[1], xor.XORgate((boolean) ht.get(word[2]), (boolean) ht.get(word[3])));
                    break;
                case "XNOR": ht.put(word[1], xnor.XNORgate((boolean) ht.get(word[2]), (boolean) ht.get(word[3])));
                    break;
                case "NOR": ht.put(word[1], nor.NORgate((boolean) ht.get(word[2]), (boolean) ht.get(word[3])));
                    break;
                case "NOT": ht.put(word[1], not.NOTgate((boolean) ht.get(word[2])));
                    break;
                case "LIGHT": ht.put(word[1], light.LIGHT((boolean) ht.get(word[2]))); 
                    break;
                
                    
                 
                
            }
            
        }
       
        
        
    }//GEN-LAST:event_buildButtonActionPerformed

    private void testActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testActionPerformed
        //Bring all of the code above here and then go from there.
        
        String[] lines = cInput.getText().split("\\r?\\n");

        for (String line : lines){
           
            String[] word = line.split(" ");
          
            switch (word[0]) {
                
                case "AND": ht.put(word[1], and.ANDgate((boolean) ht.get(word[2]), (boolean) ht.get(word[3])));
                   break;
                case "OR":  ht.put(word[1], or.ORgate((boolean) ht.get(word[2]), (boolean) ht.get(word[3]))); 
                   break;
                case "NAND": ht.put(word[1], nand.NANDgate((boolean) ht.get(word[2]), (boolean) ht.get(word[3])));
                    break;
                case "XOR": ht.put(word[1], xor.XORgate((boolean) ht.get(word[2]), (boolean) ht.get(word[3])));
                    break;
                case "XNOR": ht.put(word[1], xnor.XNORgate((boolean) ht.get(word[2]), (boolean) ht.get(word[3])));
                    break;
                case "NOR": ht.put(word[1], nor.NORgate((boolean) ht.get(word[2]), (boolean) ht.get(word[3])));
                    break;
                case "NOT": ht.put(word[1], not.NOTgate((boolean) ht.get(word[2])));
                    break;
                case "LIGHT": ht.put(word[1], light.LIGHT((boolean) ht.get(word[2]))); 
                    break;
               
                
            }
            
        }
        
        boolean l1 = (boolean) ht.get("L1");
        boolean l2 = (boolean) ht.get("L2");
        boolean l3 = (boolean) ht.get("L3");
        boolean l4 = (boolean) ht.get("L4");
        
        if (l1 == true){
            offLight1.setVisible(false);
        } else{
            offLight1.setVisible(true);
        }
        if (l2 == true){
            offLight2.setVisible(false);
        } else {
            offLight2.setVisible(true);
        }
        
        if (l3 == true){
            offLight3.setVisible(false);
        } else {
            offLight3.setVisible(true);
        }
        if (l4 == true){
            offLight4.setVisible(false);
        } else {
            offLight4.setVisible(true);
        
        }
    
    }//GEN-LAST:event_testActionPerformed

    private void switch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_switch1ActionPerformed
        if(switch1.isSelected()){
            offButton1.setVisible(false);
        } else{
            offButton1.setVisible(true);
        }
        
        if (switch1.isSelected()){
            ht.put("S1", swtch.s1(true));
        }else{
            ht.put("S1", swtch.s1(false)); 
        }
        
        
        
        
        
    }//GEN-LAST:event_switch1ActionPerformed

    private void switch2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_switch2ActionPerformed
        if(switch2.isSelected()){
            offButton2.setVisible(false);
        } else{
            offButton2.setVisible(true);
        }
        
        if (switch2.isSelected()){
            ht.put("S2", swtch.s2(true));
        }else{
            ht.put("S2", swtch.s2(false)); 
        }
    }//GEN-LAST:event_switch2ActionPerformed

    private void switch3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_switch3ActionPerformed
        if(switch3.isSelected()){
            offButton3.setVisible(false);
        } else{
            offButton3.setVisible(true);
        }
        
        if (switch3.isSelected()){
            ht.put("S3", swtch.s3(true));
        }else{
            ht.put("S3", swtch.s3(false)); 
        }
        
    }//GEN-LAST:event_switch3ActionPerformed

    private void switch4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_switch4ActionPerformed
        if(switch4.isSelected()){
            offButton4.setVisible(false);
        } else{
            offButton4.setVisible(true);
        }
        
        if (switch4.isSelected()){
            ht.put("S4", swtch.s4(true));
        }else{
            ht.put("S4", swtch.s4(false)); 
        }
        
        
    }//GEN-LAST:event_switch4ActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        offLight1.setVisible(true);
        offLight2.setVisible(true);
        offLight3.setVisible(true);
        offLight4.setVisible(true);
        ht.put("L1",light.LIGHT(false));
        ht.put("L2",light.LIGHT(false));
        ht.put("L3",light.LIGHT(false));
        ht.put("L4",light.LIGHT(false));
        
    }//GEN-LAST:event_resetButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Simulator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buildButton;
    private javax.swing.JTextArea cInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel offButton1;
    private javax.swing.JLabel offButton2;
    private javax.swing.JLabel offButton3;
    private javax.swing.JLabel offButton4;
    private javax.swing.JLabel offLight1;
    private javax.swing.JLabel offLight2;
    private javax.swing.JLabel offLight3;
    private javax.swing.JLabel offLight4;
    private javax.swing.JLabel onButton1;
    private javax.swing.JLabel onButton2;
    private javax.swing.JLabel onButton3;
    private javax.swing.JLabel onButton4;
    private javax.swing.JLabel onLight1;
    private javax.swing.JLabel onLight2;
    private javax.swing.JLabel onLight3;
    private javax.swing.JLabel onLight4;
    private javax.swing.JButton resetButton;
    private javax.swing.JCheckBox switch1;
    private javax.swing.JCheckBox switch2;
    private javax.swing.JCheckBox switch3;
    private javax.swing.JCheckBox switch4;
    private javax.swing.JButton test;
    private javax.swing.JPanel testField;
    private javax.swing.JScrollPane textArea;
    // End of variables declaration//GEN-END:variables
}
